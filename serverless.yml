service: pogokid

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  profile: pogokid

resources:
  Resources:
    ## Specifying the S3 Bucket
    WebSiteS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: pogokid-assets-${self:provider.stage}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    ## Specifying the policies to make sure all files inside the Bucket are avaialble to CloudFront
    WebSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: WebSiteS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource:
                Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: WebSiteS3Bucket
                    - "/*"

    ## Specifying the CloudFront Distribution to server your Web Application
    WebSiteCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        PriceClass: PriceClass_100
        DistributionConfig:
          Enabled: true
          HttpVersion: http2
          DefaultRootObject: index.html
          Origins:
            - Id: WebSite
              DomainName:
                Fn::GetAtt: [WebSiteS3Bucket, DomainName]
              ## An identifier for the origin which must be unique within the distribution
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
                OriginSSLProtocols: [ "TLSv1.1", "TLSv1.2" ]

              ## In case you want to restrict the bucket access use S3OriginConfig and remove CustomOriginConfig
              # S3OriginConfig:
              #   OriginAccessIdentity: origin-access-identity/cloudfront/E127EXAMPLE51Z

          ## Uncomment the following section in case you are using a custom domain
          Aliases:
            - pogokid.com
            
          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
              
            ## The origin id defined above
            TargetOriginId: WebSite

            ## Defining if and how the QueryString and Cookies are forwarded to the origin which in this case is S3
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
            Compress: true

          ## The certificate to use when viewers use HTTPS to request objects.
          ViewerCertificate:
            CloudFrontDefaultCertificate: 'true'

          ## Uncomment the following section in case you want to enable logging for CloudFront requests
          # Logging:
          #   IncludeCookies: 'false'
          #   Bucket: mylogs.s3.amazonaws.com
          #   Prefix: myprefix

  ## In order to print out the hosted domain via `serverless info` we need to define the DomainName output for CloudFormation
  Outputs:
    WebSiteCloudFrontDistributionOutput:
      Value:
        'Fn::GetAtt': [ WebSiteCloudFrontDistribution, DomainName ]


